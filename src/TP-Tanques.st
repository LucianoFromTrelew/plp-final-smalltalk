Object subclass: #Escenario	instanceVariableNames: 'unidades'	classVariableNames: ''	poolDictionaries: ''	category: 'TP-Tanques'!!Escenario methodsFor: 'accessing' stamp: 'LucianoFromTrelew 6/24/2018 21:42'!unidades	^ unidades! !!Escenario methodsFor: 'accessing' stamp: 'LucianoFromTrelew 6/24/2018 21:42'!unidades: anObject	unidades := anObject! !!Escenario methodsFor: 'as yet unclassified' stamp: 'LucianoFromTrelew 6/24/2018 21:46'!batallaEntre: unaUnidad y: otraUnidad	"Dos unidades se atacan hasta que alguna quede sin tanques vivos"	[ (unaUnidad tengoTanquesVivos) | (otraUnidad tengoTanquesVivos) ]		whileTrue: [ 			unaUnidad atacarUnidad: otraUnidad.			otraUnidad atacarUnidad: unaUnidad.			].! !!Escenario methodsFor: 'as yet unclassified' stamp: 'LucianoFromTrelew 6/24/2018 21:54'!agregarUnidad: unaUnidad	"Agrega una unidad al escenario"		unidades ifNil: [ self unidades: Set new ].		unidades add: unaUnidad.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Escenario class	instanceVariableNames: 'escenario'!!Escenario class methodsFor: 'as yet unclassified' stamp: 'LucianoFromTrelew 6/24/2018 21:40'!getEscenario	"Metodo de acceso al escenario (SINGLETON)"	escenario ifNil: [ escenario := self basicNew initialize ].	^ escenario.! !!Escenario class methodsFor: 'instance creation' stamp: 'LucianoFromTrelew 6/24/2018 21:38'!new	"comment stating purpose of message"	self error: 'Singleton class -- use getEscenario'! !Object subclass: #Misil	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP-Tanques'!!Misil methodsFor: 'as yet unclassified' stamp: 'LucianoFromTrelew 6/24/2018 16:51'!calcularCoeficientePerdida	"Devuelve el coeficiente de perdida por precision"	^ self show: ShouldNotImplement.! !!Misil methodsFor: 'as yet unclassified' stamp: 'LucianoFromTrelew 6/22/2018 22:54'!calcularDanio: unTanque	"Devuelve el danio que le haria al tanque unTanque"	^ self show: ShouldNotImplement! !Misil subclass: #Bazooka	instanceVariableNames: 'cabezasNucleares'	classVariableNames: ''	poolDictionaries: ''	category: 'TP-Tanques'!!Bazooka methodsFor: 'accessing' stamp: 'LucianoFromTrelew 6/22/2018 22:27'!cabezasNucleares	^ cabezasNucleares! !!Bazooka methodsFor: 'accessing' stamp: 'LucianoFromTrelew 6/24/2018 16:12'!cabezasNucleares: cantidad	( cantidad > 0 & cantidad <= 4 ) 		ifTrue: [ cabezasNucleares := cantidad ]		ifFalse: [ cabezasNucleares := 0 ]! !!Bazooka methodsFor: 'as yet unclassified' stamp: 'LucianoFromTrelew 6/24/2018 16:51'!calcularCoeficientePerdida	"Devuelve el coeficiente de perdida por precision"	^ 2/5.! !!Bazooka methodsFor: 'as yet unclassified' stamp: 'LucianoFromTrelew 6/24/2018 15:59'!calcularDanio: unTanque	"Devuelve el danio que le haria al tanque unTanque"	^ 5 * (self cabezasNucleares).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Bazooka class	instanceVariableNames: ''!!Bazooka class methodsFor: 'initialization' stamp: 'LucianoFromTrelew 6/24/2018 19:57'!nuevaConCabezasNucleares: cantidad	"Devuelve una bazooka con <cantidad> cabezas nucleares "	Transcript show: 'nueva bazooka con ', cantidad asString, ' cabezas nucleares'; cr.	^ (self new) cabezasNucleares: cantidad.! !Misil subclass: #Groso	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP-Tanques'!!Groso methodsFor: 'as yet unclassified' stamp: 'LucianoFromTrelew 6/24/2018 16:51'!calcularCoeficientePerdida	"Devuelve el coeficiente de perdida por precision"	^ 3/5! !!Groso methodsFor: 'as yet unclassified' stamp: 'LucianoFromTrelew 6/24/2018 16:19'!calcularDanio: unTanque 	"Devuelve el danio que le haria al tanque unTanque"	 ^ 100! !Object subclass: #Tanque	instanceVariableNames: 'coraza otro tripulantes velocidadAcutal nombre municion misiles'	classVariableNames: ''	poolDictionaries: ''	category: 'TP-Tanques'!!Tanque methodsFor: 'initialization' stamp: 'papablo 6/25/2018 12:39'!initializemisiles := Bag new.! !!Tanque methodsFor: 'as yet unclassified' stamp: 'papablo 6/25/2018 13:18'!impactar: unAtacante con: unMisil|unDanio|unDanio := unMisil calcularDanio: unAtacante.self infligirDanio: unDanio! !!Tanque methodsFor: 'as yet unclassified' stamp: 'papablo 6/25/2018 12:51'!getRandomMisil"Quitamos un misil at random de la colección y lo devolvemos"^ misiles remove: (misiles atRandom)! !!Tanque methodsFor: 'as yet unclassified' stamp: 'papablo 6/25/2018 13:06'!puedoDispararEnMovimiento^ tripulantes >= 3! !!Tanque methodsFor: 'as yet unclassified' stamp: 'papablo 6/25/2018 13:11'!tengoTripulantes^ tripulantes > 0! !!Tanque methodsFor: 'as yet unclassified' stamp: 'papablo 6/25/2018 13:03'!infligirDanio: unDanio(self esGolpeFuerte: unDanio) ifTrue: [ self tripulantes: (tripulantes - 1) ].self coraza: coraza - (self calcularDanioInfligido: unDanio).! !!Tanque methodsFor: 'as yet unclassified' stamp: 'papablo 6/25/2018 13:03'!esGolpeFuerte: unDanio^ unDanio > 50! !!Tanque methodsFor: 'as yet unclassified' stamp: 'papablo 6/25/2018 12:53'!atacarTanque: unTanque|misil|misil := self getRandomMisil.! !!Tanque methodsFor: 'as yet unclassified' stamp: 'papablo 6/25/2018 13:13'!emitoCalor^ (tripulantes > 3) or: (self estoyEnMovimiento)! !!Tanque methodsFor: 'as yet unclassified' stamp: 'papablo 6/25/2018 12:42'!cargarMisiles"Cada tipo de tanque se carga con los misiles que sabe"^ self show: ShouldNotImplement! !!Tanque methodsFor: 'as yet unclassified' stamp: 'papablo 6/25/2018 13:09'!estoyVivo^ coraza > 0! !!Tanque methodsFor: 'as yet unclassified' stamp: 'papablo 6/25/2018 13:11'!estoyEnMovimiento^ velocidadAcutal > 0! !!Tanque methodsFor: 'as yet unclassified' stamp: 'papablo 6/25/2018 13:02'!calcularDanioInfligido: unDanio^unDanio! !!Tanque methodsFor: 'as yet unclassified' stamp: 'papablo 6/25/2018 13:10'!tengoMunicion^ (misiles isNotEmpty)! !!Tanque methodsFor: 'as yet unclassified' stamp: 'papablo 6/25/2018 13:08'!atacarUnidad: unaUnidadself atacarTanque: unaUnidad! !!Tanque methodsFor: 'accessing' stamp: 'papablo 6/25/2018 12:33'!velocidadAcutal	^ velocidadAcutal! !!Tanque methodsFor: 'accessing' stamp: 'papablo 6/25/2018 12:32'!municion: anObject	municion := anObject! !!Tanque methodsFor: 'accessing' stamp: 'papablo 6/25/2018 12:32'!municion	^ municion! !!Tanque methodsFor: 'accessing' stamp: 'papablo 6/25/2018 12:33'!velocidadAcutal: anObject	velocidadAcutal := anObject! !!Tanque methodsFor: 'accessing' stamp: 'papablo 6/25/2018 12:32'!nombre: anObject	nombre := anObject! !!Tanque methodsFor: 'accessing' stamp: 'papablo 6/25/2018 12:31'!coraza	^ coraza! !!Tanque methodsFor: 'accessing' stamp: 'papablo 6/25/2018 12:32'!tripulantes	^ tripulantes! !!Tanque methodsFor: 'accessing' stamp: 'papablo 6/25/2018 12:32'!nombre	^ nombre! !!Tanque methodsFor: 'accessing' stamp: 'papablo 6/25/2018 12:32'!tripulantes: anObject	tripulantes := anObject! !!Tanque methodsFor: 'accessing' stamp: 'papablo 6/25/2018 12:31'!coraza: anObject	coraza := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Tanque class	instanceVariableNames: ''!!Tanque class methodsFor: 'as yet unclassified' stamp: 'papablo 6/25/2018 13:23'!crearCon: unNombre unaCoraza: unaCoraza unaCantidadMunicion: unaCantidadMunicion yUnosTripulantes: unaCantidadTripulantes"Crea un tanque con velocidad 0, el nombre, la coraza y la cantidad de tripulantes que se le pasen"|unTanque|unTanque := self new.unTanque nombre: unNombre ; coraza: unaCoraza ; tripulantes: unaCantidadTripulantes ; velocidadAcutal: 0; municion: unaCantidadMunicion.unTanque cargarMisiles.^ unTanque! !Tanque subclass: #TanqueLiviano	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP-Tanques'!TanqueLiviano subclass: #TanqueBlindajeEM	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP-Tanques'!Tanque subclass: #TanquePesado	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP-Tanques'!Tanque subclass: #TanqueRapido	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP-Tanques'!TanqueRapido subclass: #TanqueDron	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP-Tanques'!Misil subclass: #Termico	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP-Tanques'!!Termico methodsFor: 'as yet unclassified' stamp: 'LucianoFromTrelew 6/24/2018 16:51'!calcularCoeficientePerdida	"Devuelve el coeficiente de perdida por precision"	^ 0! !!Termico methodsFor: 'as yet unclassified' stamp: 'LucianoFromTrelew 6/24/2018 16:57'!calcularDanio: unTanque	"Devuelve el danio que le haria al tanque unTanque"	unTanque emitoCalor		ifTrue: [ ^ (self class puntosDanio) ]		ifFalse: [ ^ 0 ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Termico class	instanceVariableNames: 'puntosDanio'!!Termico class methodsFor: 'accessing' stamp: 'LucianoFromTrelew 6/24/2018 16:55'!puntosDanio: anObject	puntosDanio := anObject! !!Termico class methodsFor: 'accessing' stamp: 'LucianoFromTrelew 6/24/2018 17:11'!puntosDanio	puntosDanio isNil		ifTrue: [ ^ 25 ]		ifFalse: [ ^ puntosDanio ]! !Object subclass: #Unidad	instanceVariableNames: 'nombre tanques'	classVariableNames: ''	poolDictionaries: ''	category: 'TP-Tanques'!!Unidad methodsFor: 'converting' stamp: 'LucianoFromTrelew 6/24/2018 21:58'!asString	"Representacion de la Unidad"	^ 'Unidad ', nombre, ' con [', (self obtenerTanquesVivos size asString), '/', tanques size asString, '] tanques vivos'. ! !!Unidad methodsFor: 'as yet unclassified' stamp: 'LucianoFromTrelew 6/24/2018 19:47'!obtenerTanquesVivos	"Devuelve los tanques vivos de una unidad"		^ self tanques select: [ :tanque | tanque estoyVivo ]! !!Unidad methodsFor: 'as yet unclassified' stamp: 'LucianoFromTrelew 6/24/2018 19:59'!moverseA: unaVelocidad	"Hace que todos los tanques vivos de una unidad se muevan a velocidad unaVelocidad (o la mas cercana posible)"	self obtenerTanquesVivos collect: [ :tanque | tanque setVelocidadActual: unaVelocidad ].! !!Unidad methodsFor: 'as yet unclassified' stamp: 'LucianoFromTrelew 6/24/2018 21:23'!tengoTanquesVivos	"Indica si la unidad tiene tanques vivos"	^ (self obtenerTanquesVivos) isEmpty not.! !!Unidad methodsFor: 'as yet unclassified' stamp: 'LucianoFromTrelew 6/24/2018 20:06'!atacarUnidad: unaUnidad	"Los tanques vivos de la unidad atacan a cualquiera de los tanques vivos de unaUnidad"		self obtenerTanquesVivos collect: [ :tanque | tanque atacarUnidad: unaUnidad ].! !!Unidad methodsFor: 'accessing' stamp: 'LucianoFromTrelew 6/24/2018 19:48'!tanques	^ tanques! !!Unidad methodsFor: 'accessing' stamp: 'LucianoFromTrelew 6/24/2018 19:48'!nombre	^ nombre! !!Unidad methodsFor: 'accessing' stamp: 'LucianoFromTrelew 6/24/2018 19:48'!tanques: anObject	tanques := anObject! !!Unidad methodsFor: 'accessing' stamp: 'LucianoFromTrelew 6/24/2018 19:48'!nombre: anObject	nombre := anObject! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Unidad class	instanceVariableNames: ''!!Unidad class methodsFor: 'as yet unclassified' stamp: 'LucianoFromTrelew 6/24/2018 19:58'!nuevaConNombreYTanques: unNombre y: unaColTanques	"Devuelve una unidad con su nombre y sus tanques"	^ (self new) nombre: unNombre; tanques: unaColTanques.! !